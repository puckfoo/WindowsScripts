<#
Error and Exception Terminology

1. Exception
2. Throw and Catch
3. The Call Stack
4. Terminating and Non-terminating Errors
5. Swallowing an Exception


Error - Error are returned as PowerShell Objects.  Provide terminating and non-terminating errors.
Exceptions - Exceptions are created when normal error handling cannot handle the issue.  Exceptions are typically non-terminating.

Terminating Errors - The error generated by the script, functions, or commands, stop or halts the execution.
Non-Terminating Errors - Generated by internal commands.  Normally automatically handled so the error doesn't terminate the execution of the pipeline.

Error Handling Approaches
1. Throw - Throw the exception and possibly stop or break the script
2. Write-Error - Write the message out
3. ErrorAction
4. Try/Catch
5. Try/Finally
6. Try/Catch/Finally
#>

#Generate and Error using "Throw"
function New-Error {
    Throw "This is an Error"
}


#Use Write-Error with "-ErrorAction" to Generate Error
Write-Error -Message "This is an Error"  -ErrorAction Stop


#Generate an Error using Throw
function  New-Error {
    $number = 0;
    for ($i = 1; $i -le 10; $i++) {
        Write-Host "The current number is: $i"
        Throw "This in an Error"
        $number += $i
    }
}

New-Error




